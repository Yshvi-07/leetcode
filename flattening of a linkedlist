

/* Node structure  used in the program

struct Node{
	int data;
	struct Node * next;
	struct Node * bottom;
	
	Node(int x){
	    data = x;
	    next = NULL;
	    bottom = NULL;
	}
	
};
*/

/*  Function which returns the  root of 
    the flattened linked list. */
    Node *merge(Node * head1,Node* head2){
        if(head1==NULL){
            return head2;
        }
        if(head2==NULL){
            return head1;
        }
        Node * newnode;
        if(head1->data <= head2->data){
            newnode=head1;
            newnode->bottom=merge(head1->bottom,head2);
        }
        
        else{
            newnode=head2;
            newnode->bottom=merge(head1,head2->bottom);
        }
        return newnode;
    }
Node *flatten(Node *root)
{
   // Your code here
   if(root==NULL || root->next==NULL){
       return root;
   }
   Node* head=root;
   Node* head2=flatten(root->next);
   Node * head3=merge(head,head2);
   return head3;
}
